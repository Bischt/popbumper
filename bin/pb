#!/usr/bin/env python
# vim: set syntax=python:

import argparse
import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), "../lib/pb"))
import pb  # noqa: E402


def main(args, raw_args):
    """
    Sample function.

    Parameters:
        get_all:
            Get all resources.
        get: string
            Get specific resource.

    """
    print("RAW ARGS: {}".format(raw_args))

    if args.port == "80":
        host = args.host
    else:
        host = args.host + ":" + args.port

    playfield_service = pb.PlayfieldService(host)

    param, param_data = parse_raw_args(raw_args)

    operation = playfield_service.playfield_operations()[args.resource]
    operation(args.action, param, param_data)

    exit(0)


def parse_raw_args(raw_args):
    param = None
    param_data = None

    for arg in raw_args:
        if param is None:
            param = arg
        elif param_data is None:
            param_data = arg

    return param, param_data


def parse_arguments():
    """
    Figure out argparse's help from docstring thing
    :return:
    """
    parser = argparse.ArgumentParser(
        formatter_class=argparse.RawTextHelpFormatter,
        description=main.__doc__,
        prog='pb'
    )
    parser.add_argument(
        "resource",
        choices=pb.PlayfieldService.resource_names(),
        help=f"Resource to inspect {pb.PlayfieldService.resource_names()}",
    )
    parser.add_argument(
        "action",
        choices=pb.PlayfieldService.action_names(),
        help=f"Action to take {pb.PlayfieldService.action_names()}",
    )

    parser.add_argument("--host", help="API hostname", default="127.0.0.1")
    parser.add_argument("--port", help="API port", default="8080")
    parser.add_argument("--verbose", help="Expand output to include everything")

    args, extra_args = parser.parse_known_args()
    return args, extra_args


if __name__ == "__main__":
    args, cmd_args = parse_arguments()
    main(args, cmd_args)
